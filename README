This README file discusses the code associated with the manuscript:
Ke Yuan, Thomas Sakoparnig, Florian Markowetz and Niko Beerenwinkel. 
BitPhylogeny: A probabilistic framework for reconstructing intra-tumor phylogenies

The Python code is based on the implementation from 
Ryan Prescott Adams, Zoubin Ghahramani and Michael I. Jordan.
Tree-Structured Stick Breaking for Hierarchical Data. NIPS 2010.
http://hips.seas.harvard.edu/files/tssb.tgz

---------------------------------------------------------------------
Dependencies:

Python:
NumPy,SciPy
scikit-learn: http://scikit-learn.org/stable/ 
rpy2: http://rpy.sourceforge.net/ 

R:
rPython, mcclust, e1071, igraph, gplots, riverplot.
---------------------------------------------------------------------

Installation:

1. Clone the BitPhylogeny repository 
git clone git@bitbucket.org:ke_yuan/bitphylogeny.git 
cd bitphylogeny

2. Install the BitPhylogeny python package
cd python
sudo python setup.py install

3. Install the R package
cd ../R
R CMD INSTALL bitphylogenyR_0.1.tar.gz

We've provided a sample data file 'sample_data.csv' in the folder. To run the sample file, execute the following code. 

BitPhylogeny 'sample_data.csv' 'output' -f -n 200 -b 10 -t 5 

'sample_data.csv': the data file
'output': the output folder where the MCMC traces and tree scripts are stored.
-f: data file contains true labels as the last column.
-n: number of mcmc samples in total 
-b: number of burn-in samples
-t: thin number (a current requirement is (number of mcmc samples / thin) > 5)

The output folder contains the mcmc-traces and treescripts. To visualise tree, one need to use the aisee software to run *.gdl files. The aisee software can be obtained from http://www.absint.com/aisee/index.htm
 
For post processing, please use the accompanying R package. Tutorials of the R package are stored in doc/ directory 



