This README file discusses the code associated with the manuscript:
Ke Yuan, Thomas Sakoparnig, Florian Markowetz and Niko Beerenwinkel. 
BitPhylogeny: A probabilistic framework for reconstructing intra-tumor phylogenies

The Python code is based on the implementation from 
Ryan Prescott Adams, Zoubin Ghahramani and Michael I. Jordan.
Tree-Structured Stick Breaking for Hierarchical Data. NIPS 2010.
http://hips.seas.harvard.edu/files/tssb.tgz

---------------------------------------------------------------------
Dependencies:

Python:
NumPy
SciPy
scikit-learn: http://scikit-learn.org/stable/ 

R:
mcclust, e1071, igraph, gplots
--------------------------------------------------------------------


1. We've provided a sample data file 'sample_data.csv' in the folder. To run the sample file, execute the following code. 

python bitphylogeny.py 'sample_data.csv' 'output' 200 10 5 

'sample_data.csv': the data file
'output': the output folder where the MCMC traces and tree scripts are stored.
200: number of mcmc samples in total 
100: number of burn-in samples
5: thin number (a current requirement is number of mcmc samples / thin > 5)

The output folder contains the mcmc-traces and treescripts. To visualise tree, one need to use the aisee software to run *.gdl files. The aisee software can be obtained from http://www.absint.com/aisee/index.htm
The sankey plot script will be provided in future release. 


2. To compute the MPEAR summrized label and corresponding v-measures, execute the following code from the post-process/ folder.

sh post_process.sh '../output/sample_data.csv/' '../sample_data.csv' 

'../output/sample_data.csv/': the folder which contains mcmc-traces and treescripts
'../sample_data.csv': the data file

The code generates a pdf file of the v-measure porfile under '../output/sample_data.csv/'


3. Others:
The data folder has all the data used in the paper
The baseline folder contains the implementation of the baseline methods described in the paper. 
